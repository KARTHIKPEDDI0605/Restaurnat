spring:
  application:
    name: RestaurantApplication
    domain: example.com
  datasource:
    url: jdbc:mysql://localhost:3306/RestaurantDB
    username: root
    password: root
    driver-class-name: com.mysql.cj.jdbc.Driver
  jpa:
    properties:
      hibernate.format_sql: false
      hibernate:
        dialect: org.hibernate.dialect.MySQLDialect
        format_sql: true
    show-sql: false
    hibernate:
      ddl-auto: update




  kafka:
    bootstrap-servers: localhost:9092
    listener:
      concurrency: 3  # Number of concurrent threads consuming messages from Kafka
      ack-mode: manual
    consumer:
      group-id: restaurant-consumer-group
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: com.RestaurantRegister.Restaurant.configs.CreateRestaurantRequestDeserializer  # Use custom deserializer
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: com.RestaurantRegister.Restaurant.configs.CreateRestaurantRequestSerializer  # Use custom serializer
      properties:
        retries: 3
        request.timeout.ms: 30000
        retry.backoff.ms: 1000


server:
    port: 8081

logging:
    level:
      org.apache.kafka: DEBUG
      org.hibernate.SQL: OFF
      org.hibernate.type.descriptor.sql: OFF
      org.hibernate.engine.internal: OFF